1. What is the function that creates Regex objects?

import re

re.compile()

2. Why are raw strings often used when creating Regex objects?

so backslash is able to be used without escape char

3. What does the search() method return?

A match object

4. How do you get the actual strings that match the pattern from a Match object?

group()

5. In the regex created from r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does group 0 cover? Group 1? Group 2?

group 0 is whole number
group 1 is the first parenthesis set of 3 /d's
group 2 is the second set of parentheses 

6. Parentheses and periods have specific meanings in regular expression syntax. How would you specify that you want a regex to match actual parentheses and period characters?

use the escape character \

7. The findall() method returns a list of strings or a list of tuples of strings. What makes it return one or the other?

list of strings if no match
list of tuples is there is a match

8. What does the | character signify in regular expressions?

pipe is equal to an or expression

9. What two things does the ? character signify in regular expressions?

optional matches if parenthese before eg. (weqweqw)? it can occur once or not at all and still allow a match if other parts match
also allows non greedy matches to be used with {} expressions which means it matches the lowest matching stings not the highest by default

10. What is the difference between the + and * characters in regular expressions?

* is match 0 or more
+ is match 1 or more so at least one occurance is required for the string to match

11. What is the difference between {3} and {3,5} in regular expressions?

{3} would need to match 3 instances of a given string no more, no less e.g (ha){3} would only match with hahaha
{3.5} works as a min and max value so in above example it would accept hahaha as a minimum and up to hahahahaha (ha five times)

12. What do the \d, \w, and \s shorthand character classes signify in regular expressions?

/d looks for a digit from 0 to 9
/w looks for a word which can be a letter, digit or underscore character
/s looks for spaces tabs and newlines


13. What do the \D, \W, and \S shorthand character classes signify in regular expressions?

Looks for the opposite of the lowercase shorthands i.e /S is for things that ARE NOT a space, tab or newline

14. What is the difference between .* and .*??

.* is match anything in that part of the string e.g firstname: .* could return Firstname: Al if thats the input. It will not match spaces
.*? is the non greedy version of the above


15. What is the character class syntax to match all numbers and lowercase letters?

re.compile (r'[a-zA-Z0-9]')

16. How do you make a regular expression case-insensitive?

in the re.complile() add re.I or re.IGNORECASE after the raw string (but still within the brackets of the compile)

17. What does the . character normally match? What does it match if re.DOTALL is passed as the second argument to re.compile()?

. normall matches all but spaces
re.DOTALL includes spaces

18. If numRegex = re.compile(r'\d+'), what will numRegex.sub('X', '12 drummers, 11 pipers, five rings, 3 hens') return?

X drummers, X pipers, five rings, X hens

19. What does passing re.VERBOSE as the second argument to re.compile() allow you to do?

it would allow the use of whitespace and comments between regex arguements so its easier to read. the whitespace and comments will not be read in the output.

20. How would you write a regex that matches a number with commas for every three digits? It must match the following:

'42'
'1,234'
'6,368,745'
but not the following:

'12,34,567' (which has only two digits between the commas)
'1234' (which lacks commas)



21. How would you write a regex that matches the full name of someone whose last name is Watanabe? You can assume that the first name that comes before it will always be one word that begins with a capital letter. The regex must match the following:

'Haruto Watanabe'
'Alice Watanabe'
'RoboCop Watanabe'
but not the following:

'haruto Watanabe' (where the first name is not capitalized)
'Mr. Watanabe' (where the preceding word has a nonletter character)
'Watanabe' (which has no first name)
'Haruto watanabe' (where Watanabe is not capitalized)

re.compile(r'[A-Z][a-z]*\sWatanabe')

22. How would you write a regex that matches a sentence where the first word is either Alice, Bob, or Carol; the second word is either eats, pets, or throws; the third word is apples, cats, or baseballs; and the sentence ends with a period? This regex should be case-insensitive. It must match the following:

'Alice eats apples.'
'Bob pets cats.'
'Carol throws baseballs.'
'Alice throws Apples.'
'BOB EATS CATS.'
but not the following:

'RoboCop eats apples.'
'ALICE THROWS FOOTBALLS.'
'Carol eats 7 cats.'

re.compile(r'(Alice|Bob|Carol)\s(eats|pets|throws)\s(apples|cats|baseballs)\.',re.I)

